{"name":"Bem-data-source","tagline":"Tool for collect documentation and exaples from libraries and common sources for bem-info and legoa","body":"bem-data-source\r\n===============\r\n\r\nИнструмент для версионированной сборки документации и примеров библиотек для проектов bem-info legoa-www.\r\n\r\n### Установка\r\n\r\n* клонировать репозиотрий `git clone git://github.com/bem/bem-data-source.git`\r\n* перейти в директорию с выкачанным проектом `cd bem-data-source`\r\n* запустить команду `make`\r\n\r\nКоманда `make` устанавливает зависимости для проекта и генерирует конфигурационный файл:\r\n* `config/credentials.json`\r\n\r\n### Конфигурирование\r\n\r\nКонфигурация инструмента описывается в файлах `config/config.json`, `config/credentials.json`.\r\n\r\n##### `config/config.json`\r\n\r\n* `logLevel` - флаг уровня логгирования.\r\n\r\n##### `config/credentials.json`\r\n\r\nФайл с токенами доступа к публичным и приватным репозиториям (github.com и github.yandex-team.ru соответственно)\r\nНеобходимо сгенерировать токены доступа в настройках профиля пользователя на github.com и github.yandex.team.ru\r\nи вставить как значения соответствующих token-полей в данном файле.\r\n\r\n```\r\n\"credentials\": {\r\n    \"public\": {\r\n        \"type\": \"oauth\",\r\n        \"token\": \"\"\r\n    },\r\n    \"private\": {\r\n        \"type\": \"oauth\",\r\n        \"token\": \"\"\r\n    }\r\n}\r\n```\r\n\r\nТакже в этом файле настраивается конфигурация для доступа целевому репозиторию\r\nв который будет помещен результат сборки, например:\r\n\r\n```\r\n\"dataConfig\": {\r\n    \"private\": \"false\",\r\n    \"user\": \"bem\",\r\n    \"repo\": \"bem-info-libs\",\r\n    \"ref\": \"master\"\r\n}\r\n```\r\n\r\n##### Файл `config/pattern.js`\r\n\r\nВ этом файле описываются для каждой библиотеки можно переопределить дефолтные настройки сборки, например:\r\n\r\n```\r\n'bem-components': {\r\n    builder: 'enb',\r\n    command: 'YENV=production enb make tests && enb make docs',\r\n    copy: ['*.docs', '*.tests'],\r\n    readme: {\r\n        folder: '',\r\n        pattern: 'README.md'\r\n    },\r\n    changelog: {\r\n        folder: '',\r\n        pattern: 'CHANGELOG.md'\r\n    },\r\n    migration: {\r\n        folder: '',\r\n        pattern: 'MIGRATION.md'\r\n    },\r\n    notes: {\r\n        folder: '',\r\n        pattern: 'MIGRATION.md'\r\n    }\r\n    pattern: {\r\n        data: '%s.data.json',\r\n        jsdoc: '%s.jsdoc.html'\r\n    },\r\n    skip: []\r\n}\r\n```\r\n\r\nЗдесь:\r\n\r\n* `builder` - название инструмента с помощью которого будет выполняться сборка документации и примеров.\r\n Допустимые значения `enb` и `bem-tools`. \r\n Значение по умолчанию `bem-tools`.\r\n \r\n* `command` - строка с названием команды для запуска сборки. \r\n Значение по умолчанию `npm run build`\r\n\r\n* `copy` - массив с шаблонами названий директорий с файлами документации и примеров, \r\nкоторые должны попасть в финальный результат сборки. Первым элементом данного массива должен быть шаблон директорий\r\nкоторые содержат файлы с документацией по блокам.\r\n Значение по умолчанию `['*.sets']`\r\n\r\n* `readme` - объект с полями `folder` и `pattern`, по которым сборщик может определить метоположение\r\n и имя актуального readme файла для библиотеки. При этом поле `pattern` может быть объектом c ключами\r\n локализации, например: \r\n \r\n```\r\npattern: {\r\n    en: '...',\r\n    ru: '...'\r\n}\r\n```\r\n \r\nЭто позволяет задавать различные файлы для разных локализаций. \r\n\r\nКроме того, конфигурация позволяет указывать путь к  произвольному файлу доументации на github.\r\nДля этого необходимо убрать поле folder а значением поля pattern указать путь (как в браузере)\r\nк искомому файлу друментации на github, например:\r\n\r\n```\r\nreadme: {\r\n    pattern: 'https://github.com/bem/bem-bl/blob/dev/README.ru.md'\r\n},\r\n```\r\n\r\n* `changelog` - аналогично `readme`\r\n* `migration` - аналогично `readme`\r\n* `notes` - аналогично `readme`\r\n\r\n* `pattern` - объект с полями `data` и `jsdoc` в котором можно указать шаблоны файлов с документацией\r\nи js документацией к блокам. Значение по умолчанию:\r\n\r\n```\r\npattern: {\r\n    data: '%s.data.json',\r\n    jsdoc: '%s.jsdoc.json'\r\n}\r\n```\r\n\r\n* `skip` - массив с именами шагов сборки которые не должны быть выполнены для текущей библиотеки. \r\nДопустимые элементы массива: 'npmInstall', 'npmInstallBemSets', 'npmInstallBem', 'npmRunDeps', 'copyBorschik', 'npmRunBuild',\r\n'copySets', 'collectSets'.\r\n\r\n\r\n### Запуск\r\n\r\nЗапуск выполняется командой `node bin/start.js` с указанием дополнительных опций:\r\n\r\n* `-p` или `--private`, если репозиторий внутренний\r\n* `-u` или `--user` - имя пользователя или название организации (обязательный параметр)\r\n* `-r` или `--repo` - название репозитория (обязательный параметр)\r\n* `-t` или `--tags` - название версии (тега) библиотеки\r\n* `-b` или `--branches` - название ветки библиотеки\r\n\r\nОтветственный за разработку @bemer\r\n\r\nВопросы и пожелания присылать по адресу: bemer@yandex-team.ru\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}