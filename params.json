{"name":"Bem-data-source","tagline":"Tool for collect documentation and exaples from libraries and common sources for bem-info and legoa","body":"bem-data-source\r\n===============\r\n\r\nИнструмент для версионированной сборки документации и примеров библиотек для проектов bem-info.\r\n\r\n## Установка\r\n\r\n* клонировать репозиторий `git clone git://github.com/bem/bem-data-source.git`\r\n* перейти в директорию со скаченным проектом `cd bem-data-source`\r\n* установить npm зависимости коммандой `npm install`\r\n\r\nПосле установки зависимостей конфигурационный файл `config/credentials.json`.\r\n\r\n## Конфигурирование\r\n\r\nКонфигурация инструмента описывается в файлах `config/config.json`, `config/credentials.json`.\r\n\r\n### Файл config/config.json\r\n\r\n* `logLevel` - флаг уровня логгирования. может принимать значения: (\"verbose\", \"debug\", \"info\", \"warn\", \"error\")\r\n* `languages` - массив локалей\r\n\r\n### Файл config/credentials.json\r\n\r\nФайл с токенами доступа к публичным и приватным репозиториям (github.com и github.yandex-team.ru соответственно)\r\nНеобходимо сгенерировать токены доступа в настройках профиля пользователя на github.com и github.yandex.team.ru\r\nи вставить как значения соответствующих token-полей в данном файле.\r\n\r\n```\r\n\"credentials\": {\r\n    \"public\": \"\",\r\n    \"private\": \"\"\r\n}\r\n```\r\n\r\nТакже в этом файле настраивается конфигурация для доступа целевому репозиторию\r\nв который будет помещен результат сборки, например:\r\n\r\n```\r\n\"dataConfig\": {\r\n    \"private\": false,\r\n    \"user\": \"bem\",\r\n    \"repo\": \"bem-info-libs\",\r\n    \"ref\": \"master\"\r\n}\r\n```\r\nЗдесь: \r\n\r\n* `private` - обозначает приватность github хоста на котором хранится репозиторий. \r\n\r\n`false` - для публичного гитхаба `github.com`\r\n`true` - для корпоративного гитхаба.\r\n\r\n* `user` - имя пользователя или название организации.\r\n* `repo` - название рапозитория\r\n* `ref` - название ветки (по умолчанию \"master\")\r\n\r\n## [Декларации для сборки библиотеки](./docs/declarations.md)\r\n \r\n## [Описание модулей для сборки](./docs/tasks.md)\r\n\r\n## Запуск\r\n\r\nЗапуск выполняется командой `node bin/ds make` с указанием дополнительных опций:\r\n\r\n* `-p` или `--private`, если репозиторий внутренний\r\n* `-u` или `--user` - имя пользователя или название организации (обязательный параметр)\r\n* `-r` или `--repo` - название репозитория (обязательный параметр)\r\n* `-t` или `--tags` - название версии (тега) библиотеки\r\n* `-b` или `--branches` - название ветки библиотеки\r\n\r\n## Дополнительные комманды\r\n\r\n### Замена документа в собранных данных библиотеки\r\n\r\nВыполняется командой `node bin/ds replace-doc` с указанием дополнительных опций:\r\n\r\n* `-r` или `--repo` - название репозитория (обязательный параметр)\r\n* `-v` или `--version` - название версии (тега или ветки) библиотеки (обязательный параметр)\r\n* `-d` или `--doc` - ключ документа в сборки библиотеки ('readme', 'changelog', 'migration', ...) (обязательный параметр)\r\n* `-l` или `--lang` - языковая версия заменяемого документа. Если этот параметр неуказан, то будут заменены\r\nвсе яызковые версии документа, указанного в параметре `-d`.\r\n* `-u` или `--url` - url для `*.md` файла источника замены на github, например: \r\n\r\n### Удаление версии библиотеки из репозитория с собранными данными\r\n\r\nВыполняется командой `node bin/ds remove` с указанием дополнительных опций:\r\n\r\n* `-r` или `--repo` - название репозитория (обязательный параметр)\r\n* `-v` или `--version` - название версии (тега или ветки) библиотеки (обязательный параметр)\r\n\r\nПосмотреть текущую версию приложения можно выполнив команду: `node bin/ds -v`\r\n\r\nОтветственный за разработку @bemer\r\n\r\nВопросы и пожелания присылать по адресу: bemer@yandex-team.ru\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}